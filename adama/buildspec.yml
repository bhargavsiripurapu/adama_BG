version: 0.2

env:
  variables:
    AWS_REGION: "ap-south-1"
    IMAGE_TAG: "latest"
    AWS_ACCOUNT_ID: "600941914653"
    ECR_REGISTRY: "600941914653.dkr.ecr.ap-south-1.amazonaws.com"
    ECR_REPOSITORY: "adama_internal"
    TASK_DEF_NAME: "adama-internal-prod-task"
    S3_BUCKET_NAME: "adama-ecs-bg"
    CODEDEPLOY_APPLICATION_NAME: "AppECS-adama-internal-prod-cluster-adama-internal-prod-BG"
    CODEDEPLOY_DEPLOYMENT_GROUP_NAME: "DgpECS-adama-internal-prod-cluster-adama-internal-prod-BG"
phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - yum update -y
      - yum install -y jq
      - curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/local/bin/yq
      - chmod +x /usr/local/bin/yq

  pre_build:
    commands:
      - echo "Checking project directory..."
      - pwd
      - ls -l
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$ECR_REGISTRY"
      - export IMAGE_TAG=$CODEBUILD_BUILD_NUMBER

  build:
    commands:
      - echo "Building Docker images using Docker..."
      - docker build --no-cache -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG -f adama/login-app/Dockerfile .
      - echo "Listing built images..."
      - docker images
      - echo "Tagging images..."
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG "$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG"
      - echo "Pushing Docker images to ECR..."
      - docker push "$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG"


  post_build:
    commands:
      - echo "Setting environment variables..."
      - export ECR_REPOSITORY="adama_internal"
      - export ECR_REGISTRY="600941914653.dkr.ecr.ap-south-1.amazonaws.com"
      - aws ecr describe-images --repository-name "$ECR_REPOSITORY" --region "$AWS_REGION" --query 'sort_by(imageDetails, &imagePushedAt)[-1:].imageTags' --output json

      - echo "Updating task definition JSON with new image URLs..."
      - jq --arg appImage "$ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG" '.containerDefinitions[0].image=$appImage' adama/task-def.json > new-task-def.json
      - cat new-task-def.json
      - echo "Registering new ECS task definition..."
      - aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - aws s3 cp s3://$S3_BUCKET_NAME/appspec.yaml appspec.yaml
      - export LATEST_TASK_DEF_ARN=$(aws ecs list-task-definitions --family-prefix "adama-internal-prod-task" --region "$AWS_REGION" --sort DESC | jq -r '.taskDefinitionArns[0]')
      - yq eval ".Resources[0].TargetService.Properties.TaskDefinition = \"$LATEST_TASK_DEF_ARN\"" -i appspec.yaml
      - cat appspec.yaml
      - aws s3 cp appspec.yaml s3://$S3_BUCKET_NAME/appspec.yaml 

      - echo "Initiating CodeDeploy deployment..."
      - aws deploy create-deployment --application-name $CODEDEPLOY_APPLICATION_NAME --deployment-group-name $CODEDEPLOY_DEPLOYMENT_GROUP_NAME --revision '{"revisionType":"S3","s3Location":{"bucket":"'$S3_BUCKET_NAME'","key":"appspec.yaml","bundleType":"YAML"}}' --region $AWS_REGION

